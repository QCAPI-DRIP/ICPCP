openapi: 3.0.0
info:
  title: q-cwop
  description: 'Quality-Critical WOrkflow Planner Q-CWOP '
  contact:
    email: S.Koulouzis@uva.nl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
- url: /q-cwop/0.0.1
paths:
  /tosca/:
    get:
      summary: get workflow plan as tosca
      description: Returns a single pet
      operationId: get_tosca_plan
      parameters:
      - name: git_url
        in: query
        description: cwl git url
        required: true
        style: form
        explode: true
        schema:
          type: string
        examples:
          dna.cw:
            value: https://raw.githubusercontent.com/common-workflow-library/legacy/master/workflows/make-to-cwl/dna.cwl
      - name: performance_file_url
        in: query
        description: the location of the  performance file
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: deadline_file_url
        in: query
        description: the location of the  deadline file
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: price_file_url
        in: query
        description: the location of the  price file
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cloud_preferences
        in: query
        description: the cloud preferences
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/cloud_preferences'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToscaTemplate'
        "400":
          description: Invalid url supplied
          content: {}
        "404":
          description: reposetory not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    ToscaTemplate:
      type: object
    cloud_preferences:
      type: object
      properties:
        provider_name:
          type: string
        datacenter:
          type: string

