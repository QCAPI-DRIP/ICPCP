# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CloudPreferences(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, provider_name: str=None, datacenter: str=None):  # noqa: E501
        """CloudPreferences - a model defined in Swagger

        :param provider_name: The provider_name of this CloudPreferences.  # noqa: E501
        :type provider_name: str
        :param datacenter: The datacenter of this CloudPreferences.  # noqa: E501
        :type datacenter: str
        """
        self.swagger_types = {
            'provider_name': str,
            'datacenter': str
        }

        self.attribute_map = {
            'provider_name': 'provider_name',
            'datacenter': 'datacenter'
        }
        self._provider_name = provider_name
        self._datacenter = datacenter

    @classmethod
    def from_dict(cls, dikt) -> 'CloudPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The cloud_preferences of this CloudPreferences.  # noqa: E501
        :rtype: CloudPreferences
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider_name(self) -> str:
        """Gets the provider_name of this CloudPreferences.


        :return: The provider_name of this CloudPreferences.
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name: str):
        """Sets the provider_name of this CloudPreferences.


        :param provider_name: The provider_name of this CloudPreferences.
        :type provider_name: str
        """

        self._provider_name = provider_name

    @property
    def datacenter(self) -> str:
        """Gets the datacenter of this CloudPreferences.


        :return: The datacenter of this CloudPreferences.
        :rtype: str
        """
        return self._datacenter

    @datacenter.setter
    def datacenter(self, datacenter: str):
        """Sets the datacenter of this CloudPreferences.


        :param datacenter: The datacenter of this CloudPreferences.
        :type datacenter: str
        """

        self._datacenter = datacenter
